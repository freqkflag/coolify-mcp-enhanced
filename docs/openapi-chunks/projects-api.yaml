openapi: 3.1.0
info:
  title: Coolify
  version: '0.1'
paths:
  /projects:
    get:
      tags:
        - Projects
      summary: List
      description: List projects.
      operationId: list-projects
      responses:
        '200':
          description: Get all projects.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
      security:
        - bearerAuth: []
    post:
      tags:
        - Projects
      summary: Create
      description: Create Project.
      operationId: create-project
      requestBody:
        description: Project created.
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                  description: The name of the project.
                description:
                  type: string
                  description: The description of the project.
              type: object
      responses:
        '201':
          description: Project created.
          content:
            application/json:
              schema:
                properties:
                  uuid:
                    type: string
                    example: og888os
                    description: The UUID of the project.
                type: object
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
      security:
        - bearerAuth: []
  /projects/{uuid}:
    get:
      tags:
        - Projects
      summary: Get
      description: Get project by UUID.
      operationId: get-project-by-uuid
      parameters:
        - name: uuid
          in: path
          description: Project UUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Project details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Project not found.
      security:
        - bearerAuth: []
    delete:
      tags:
        - Projects
      summary: Delete
      description: Delete project by UUID.
      operationId: delete-project-by-uuid
      parameters:
        - name: uuid
          in: path
          description: UUID of the application.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Project deleted.
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: Project deleted.
                type: object
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
      security:
        - bearerAuth: []
    patch:
      tags:
        - Projects
      summary: Update
      description: Update Project.
      operationId: update-project-by-uuid
      requestBody:
        description: Project updated.
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                  description: The name of the project.
                description:
                  type: string
                  description: The description of the project.
              type: object
      responses:
        '201':
          description: Project updated.
          content:
            application/json:
              schema:
                properties:
                  uuid:
                    type: string
                    example: og888os
                  name:
                    type: string
                    example: Project Name
                  description:
                    type: string
                    example: Project Description
                type: object
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
      security:
        - bearerAuth: []
  /projects/{uuid}/{environment_name_or_uuid}:
    get:
      tags:
        - Projects
      summary: Environment
      description: Get environment by name or UUID.
      operationId: get-environment-by-name-or-uuid
      parameters:
        - name: uuid
          in: path
          description: Project UUID
          required: true
          schema:
            type: string
        - name: environment_name_or_uuid
          in: path
          description: Environment name or UUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Environment details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
      security:
        - bearerAuth: []
