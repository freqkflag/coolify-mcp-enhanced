openapi: 3.1.0
info:
  title: Coolify
  version: '0.1'
paths:
  /servers:
    get:
      tags:
        - Servers
      summary: List
      description: List all servers.
      operationId: list-servers
      responses:
        '200':
          description: Get all servers.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Server'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
      security:
        - bearerAuth: []
    post:
      tags:
        - Servers
      summary: Create
      description: Create Server.
      operationId: create-server
      requestBody:
        description: Server created.
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                  example: My Server
                  description: The name of the server.
                description:
                  type: string
                  example: My Server Description
                  description: The description of the server.
                ip:
                  type: string
                  example: 127.0.0.1
                  description: The IP of the server.
                port:
                  type: integer
                  example: 22
                  description: The port of the server.
                user:
                  type: string
                  example: root
                  description: The user of the server.
                private_key_uuid:
                  type: string
                  example: og888os
                  description: The UUID of the private key.
                is_build_server:
                  type: boolean
                  example: false
                  description: Is build server.
                instant_validate:
                  type: boolean
                  example: false
                  description: Instant validate.
                proxy_type:
                  type: string
                  enum:
                    - traefik
                    - caddy
                    - none
                  example: traefik
                  description: The proxy type.
              type: object
      responses:
        '201':
          description: Server created.
          content:
            application/json:
              schema:
                properties:
                  uuid:
                    type: string
                    example: og888os
                    description: The UUID of the server.
                type: object
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
      security:
        - bearerAuth: []
  /servers/{uuid}:
    get:
      tags:
        - Servers
      summary: Get
      description: Get server by UUID.
      operationId: get-server-by-uuid
      parameters:
        - name: uuid
          in: path
          description: Server's UUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Get server by UUID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
      security:
        - bearerAuth: []
    delete:
      tags:
        - Servers
      summary: Delete
      description: Delete server by UUID.
      operationId: delete-server-by-uuid
      parameters:
        - name: uuid
          in: path
          description: UUID of the server.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Server deleted.
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: Server deleted.
                type: object
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
      security:
        - bearerAuth: []
    patch:
      tags:
        - Servers
      summary: Update
      description: Update Server.
      operationId: update-server-by-uuid
      parameters:
        - name: uuid
          in: path
          description: Server UUID
          required: true
          schema:
            type: string
      requestBody:
        description: Server updated.
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                  description: The name of the server.
                description:
                  type: string
                  description: The description of the server.
                ip:
                  type: string
                  description: The IP of the server.
                port:
                  type: integer
                  description: The port of the server.
                user:
                  type: string
                  description: The user of the server.
                private_key_uuid:
                  type: string
                  description: The UUID of the private key.
                is_build_server:
                  type: boolean
                  description: Is build server.
                instant_validate:
                  type: boolean
                  description: Instant validate.
                proxy_type:
                  type: string
                  enum:
                    - traefik
                    - caddy
                    - none
                  description: The proxy type.
              type: object
      responses:
        '201':
          description: Server updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
      security:
        - bearerAuth: []
  /servers/{uuid}/resources:
    get:
      tags:
        - Servers
      summary: Resources
      description: Get resources by server.
      operationId: get-resources-by-server-uuid
      parameters:
        - name: uuid
          in: path
          description: Server's UUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Get resources by server
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: integer
                    uuid:
                      type: string
                    name:
                      type: string
                    type:
                      type: string
                    created_at:
                      type: string
                    updated_at:
                      type: string
                    status:
                      type: string
                  type: object
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
      security:
        - bearerAuth: []
  /servers/{uuid}/domains:
    get:
      tags:
        - Servers
      summary: Domains
      description: Get domains by server.
      operationId: get-domains-by-server-uuid
      parameters:
        - name: uuid
          in: path
          description: Server's UUID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Get domains by server
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    ip:
                      type: string
                    domains:
                      type: array
                      items:
                        type: string
                  type: object
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
      security:
        - bearerAuth: []
  /servers/{uuid}/validate:
    get:
      tags:
        - Servers
      summary: Validate
      description: Validate server by UUID.
      operationId: validate-server-by-uuid
      parameters:
        - name: uuid
          in: path
          description: Server UUID
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Server validation started.
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: Validation started.
                type: object
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
      security:
        - bearerAuth: []
